{"version":3,"sources":["Assets/header_logo.svg","Pages/About.jsx","Components/Header.jsx","Assets/home_banner.png","Components/Banner.jsx","Components/Thumbnail.jsx","Pages/Gallery.jsx","Pages/Home.jsx","Assets/arrow-left.svg","Assets/arrow-right.svg","Pages/Gallery_Slider.jsx","Pages/Gallery_Info.jsx","Components/Tag.jsx","Pages/Apartment.jsx","App.js","reportWebVitals.js","index.js"],"names":["About","props","textInput","Reliability","Respect","Service","Safety","Component","Header","src","header_logo","className","alt","exact","activeClassName","activeStyle","to","Banner","home_banner","Thumbnail","id","cover","title","this","Gallery","data","map","datas","index","Home","Gallery_Slider","nextPicture","setState","state","currentPicture","picture","length","prevPicture","console","log","apartment","pictures","imagesLength","arrowLeft","onClick","arrowRight","images","Gallery_Info","Apartment","idParam","match","params","find","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1b00fd6c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/header_logo.c9333877.svg\";","import React, { Component } from \"react\";\nimport Header from \"../Components/Header\";\n\nexport class About extends Component {\n  constructor(props) {\n    super(props);\n    this.textInput = {\n      Reliability:\n        \"The ads posted on Kasa guarantee total reliability of the place. The photos are consistend with the accommodations, and all information is regularly checked by our teams.\",\n      Respect:\n        \"Caring is one of the founding values of Kasa. Any discriminatory behavior or disruptive behavior in the neighborhood will result in exclusion from our platform.\",\n      Service:\n        \"Our teams are at your disposal to provide you with the best experience. Please do not hesitate to contact us if you have any questions.\",\n      Safety:\n        \"Safety is Kasa's priority. Both for our guests and for travelers, each accommodation is compliant with the safety criteria established by our services. By leaving a note for both the host and the tenant, our teams can verify that the standards are respected. We also organize workshops on home security for our guests.\",\n    };\n  }\n  render() {\n    return (\n      <div>\n        <h1>ABOUT PAGE</h1>\n      </div>\n    );\n  }\n}\n\nexport default About;\n","import \"../Styles/Header.css\";\nimport header_logo from \"../Assets/header_logo.svg\";\nimport { NavLink } from \"react-router-dom\";\nimport About from \"../Pages/About\";\nimport React, { Component } from \"react\"; // Destructuring assignment\n\nclass Header extends Component {\n  render() {\n    return (\n      <header>\n        <img src={header_logo} className='header__logo' alt='Logo' />\n        <nav>\n          <ul className='navbar__list'>\n            <li className='navbar__list-item'>\n              <NavLink\n                //<NavLink> A special version of the <Link> that will add styling attributes to the rendered element when it matches the current URL.\n                exact //exact: boolWhen true, the active class/style will only be applied if the location is matched exactly.\n                //exact: It is used to match the exact value with the URL. For Eg., exact path=’/about’ will only render the component if it exactly matches the path but if we remove exact from the syntax, then UI will still be rendered even if the strucute is like /about/10.\n                activeClassName='navbar__link--active'\n                className='navbar__link'\n                activeStyle={\n                  {\n                    //activeStyle: object The styles to apply to the element when it is active.\n                    // fontWeight: \"bold\",\n                    // color: \"red\",\n                    // textDecoration: \"underline\",\n                  }\n                }\n                to='/' //to: object A string representation of the Link location, created by concatenating the location’s pathname, search, and hash properties.\n              >\n                Home\n              </NavLink>\n            </li>\n            <li className='navbar__list-item'>\n              <NavLink\n                //<NavLink> A special version of the <Link> that will add styling attributes to the rendered element when it matches the current URL.\n                exact //exact: boolWhen true, the active class/style will only be applied if the location is matched exactly.\n                activeClassName='navbar__link'\n                className='navbar__link'\n                activeStyle={\n                  {\n                    //activeStyle: object The styles to apply to the element when it is active.\n                    // textDecoration: \"underline\",\n                  }\n                }\n                to='/about' //to: object A string representation of the Link location, created by concatenating the location’s pathname, search, and hash properties.\n              >\n                About\n              </NavLink>\n            </li>\n          </ul>\n        </nav>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","export default __webpack_public_path__ + \"static/media/home_banner.024f945a.png\";","import React, { Component } from \"react\";\nimport home_banner from \"../Assets/home_banner.png\";\nimport \"../Styles/Banner.css\";\n\nexport class Banner extends Component {\n  render() {\n    return (\n      <div className='banner__container'>\n        <div className='banner__background'></div>\n        <img src={home_banner} alt='logo' className='banner__image' />\n        <h1 className='banner__text'>Home anywhere and everywhere</h1>\n      </div>\n    );\n  }\n}\n\nexport default Banner;\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../Styles/Thumbnail.css\";\n\nexport class Thumbnail extends Component {\n  constructor(props) {\n    //   Props stands for “properties,” and they are used in a React application to send data from one React component to another React component.\n    super(props);\n    this.id = this.props.id;\n    this.cover = this.props.cover;\n    this.title = this.props.title;\n  }\n  render() {\n    //   destructuring props\n    // const { title, cover, id,type } = this.props;\n    return (\n      <li className='thumb__apartment'>\n        <Link to={`/apartment/${this.id}`} className='thumb__link'>\n          <div className='thumb__container'>\n            <img src={this.cover} alt='' className='thumb__image' />\n            <div className='thumb__background'></div>\n            <h2 className='thumb__title'>{this.title}</h2>\n          </div>\n        </Link>\n      </li>\n    );\n  }\n}\n\nexport default Thumbnail;\n","import React, { Component } from \"react\";\nimport Thumbnail from \"../Components/Thumbnail\";\nimport data from \"../Assets/data.json\";\nimport \"../Styles/Gallery.css\";\n\nexport class Gallery extends Component {\n  render() {\n    return (\n      <main>\n        <ul className='gallery__main'>\n          {data.map((datas, index) => (\n            <Thumbnail\n              title={datas.title}\n              cover={datas.cover}\n              id={datas.id}\n              key={index}\n            />\n          ))}\n        </ul>\n      </main>\n    );\n  }\n}\n\nexport default Gallery;\n","import React, { Component } from \"react\";\nimport Banner from \"../Components/Banner\";\nimport Header from \"../Components/Header\";\nimport Gallery from \"../Pages/Gallery\";\nimport \"../Styles/Home.css\";\n\nexport class Home extends Component {\n  render() {\n    return (\n      <main className='home'>\n        <Banner />\n        <Gallery />\n      </main>\n    );\n  }\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/arrow-left.19918a16.svg\";","export default __webpack_public_path__ + \"static/media/arrow-right.8d9545cb.svg\";","import React, { Component } from \"react\";\nimport arrowLeft from \"../Assets/arrow-left.svg\";\nimport arrowRight from \"../Assets/arrow-right.svg\";\nimport data from \"../Assets/data.json\";\nimport GallerySlider from \"../Styles/GallerySlider.css\";\n\nexport class Gallery_Slider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { currentPicture: 0 }; //state current currentPicture\n    this.picture = this.props.apartment.pictures;\n    this.imagesLength = this.picture.length;\n  }\n  // if the user is on the last image in the gallery and clicks on Next Image, it  displays the first image\n  nextPicture = () => {\n    //setState() is the only legitimate way to update state after the initial state setup\n    //Here, we’re passing an object to setState(). The object contains the part of the state we want to update\n    this.setState(\n      this.state.currentPicture === this.picture.length - 1\n        ? { currentPicture: 0 }\n        : { currentPicture: this.state.currentPicture + 1 }\n    );\n    // Logic explained if state curent currentPicture is ===  to how max images of every ap(this.picture.length - 1),it\n    //should go to first ap{currentPicture:0}\n    // console.log(this.state);\n    // console.log(this.picture.length);\n  };\n\n  prevPicture = () => {\n    //setState() is the only legitimate way to update state after the initial state setup\n    //Here, we’re passing an object to setState(). The object contains the part of the state we want to update\n    this.setState(\n      this.state.currentPicture === 0\n        ? { currentPicture: this.picture.length - 1 }\n        : { currentPicture: this.state.currentPicture - 1 }\n    );\n    console.log(this.state);\n    console.log(this.picture.length);\n  };\n  render() {\n    return (\n      <div className='gallery__slider'>\n        <img\n          src={arrowLeft}\n          alt='arrow-left'\n          //If there is only one image, the Next and Previous buttons do not appear\n          //   \"id\": \"cb02d69b\",\n          // \"title\": \"Beautiful Rivoli Apartment\"\n          //   if the Images Length is === 1 image then no arrows(inactiveState)\n          className={\n            //conditional (ternary) operator\n            //condition ? exprIfTrue : exprIfFalse\n            this.imagesLength === 1 ? \"inactiveState\" : \"arrow-left\"\n          }\n          onClick={this.prevPicture}\n        ></img>\n        <img\n          src={arrowRight}\n          alt='arrow-right'\n          // If there is only one image, the Next and Previous buttons do not appear\n          //   \"id\": \"cb02d69b\",\n          // \"title\": \"Beautiful Rivoli Apartment\"\n          //   if the Images Length is === 1 image then no arrows(inactiveState)\n          className={\n            //conditional (ternary) operator\n            //condition ? exprIfTrue : exprIfFalse\n            this.imagesLength === 1 ? \"inactiveState\" : \"arrow-right\"\n          }\n          onClick={this.nextPicture}\n        ></img>\n\n        {this.picture.map((images, index) => {\n          return (\n            <div\n              className={\n                //conditional (ternary) operator\n                //condition ? exprIfTrue : exprIfFalse\n                this.state.currentPicture === index\n                  ? \"activeState\"\n                  : \"inactiveState\"\n              }\n              //   Each child in a list should have a unique \"key\" prop.\n              //   Keys help React identify which items have changed, are added, or are removed. Keys should be given to the elements inside the array to give the elements a stable identity\n              //   When you don’t have stable IDs for rendered items, you may use the item index as a key as a last resort\n\n              key={index}\n            >\n              <img\n                src={images}\n                alt='Apartment Photo'\n                className='gallery__image'\n              />\n            </div>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default Gallery_Slider;\n","import React, { Component } from \"react\";\nimport Tag from \"../Components/Tag\";\nimport data from \"../Assets/data.json\";\n\nexport class Gallery_Info extends Component {\n  render() {\n    return <div></div>;\n  }\n}\n\nexport default Gallery_Info;\n","import React, { Component } from \"react\";\nimport Tags from \"../Styles/Tags.css\";\n\nexport class Tag extends Component {\n  render() {\n    return <div></div>;\n  }\n}\n\nexport default Tag;\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { withRouter } from \"react-router-dom\";\nimport { Redirect } from \"react-router-dom\";\nimport Gallery from \"./Gallery\";\nimport Home from \"./Home\";\nimport data from \"../Assets/data.json\";\nimport Gallery_Slider from \"./Gallery_Slider\";\nimport Gallery_Info from \"./Gallery_Info\";\n\n// Rendering a <Redirect> will navigate to a new location.\n// The new location will override the current location in the history stack, like server-side redirects\n\nexport class Apartment extends Component {\n  // create constructor i.e constructor(props) {} and inside it declare the id as avariable to the class. Pass the value of match.params.id to the id by using id: this.props.match.params.id.\n  //  so i can access the variable anywhere in my code\n\n  // Solution 2\n  // useParams returns an object of key/value pairs of URL parameters. Use it to access match.params of the current <Route>.\n  // const params = useParams();\n  // useParams hook from react-router-dom for this instead\n  //   const { id } = useParams();\n  //   It means whatever you set up in useParams(ex: title), your params have to match with the <Route path='/path/:title'> .\n  constructor(props) {\n    super(props);\n    // this.id = this.props.match.params.id;\n    // this.accommodation = data.find((entry) => entry.id === this.id);\n\n    // this.id = this.props.match.params.id;\n    // Those props contain the params under the  property, so we can use object destructuring to get back our id\n    // const { id } = props.match.params;\n    // const { id } = useParams();\n    // this.apartments = data.find((ap) => ap.id === params.id);\n    // this.apartments = data.find((ap) => ap.id === this.id);\n\n    // const apartment = this.props.apartments.filter(\n    //   (ap) => ap.id === this.props.match.params.id\n    // );\n    // const currentApartment = data.filter((ap) => ap.id === idParam)[0];\n    // const getThisApartment = (id) =>\n    //   housingList.find((housing) => housing.id === id);\n\n    // renderElement = () => {\n    //   if (!this.idParams === undefined) {\n    //     <Redirect to='/404' />;\n    //   }\n    // };\n    // const currentLocation = data.filter((elt) => elt.pictures === this.id)[0];\n\n    // const idParam = this.props.match.params.id;\n    // if (!data.some((elt) => elt.id === idParam)) return <Redirect to='/404' />;\n\n    // const currentLocation = data.filter((elt) => elt.id === idParam)[0];\n    // this.idParam = this.props.match.params.id;\n    // this.apartment = this.props.data.filter(\n    //   (ap) => ap.id === this.props.match.params.idParam\n    // );\n\n    this.idParam = this.props.match.params.id;\n    this.apartment = data.find((datas) => datas.id === this.idParam);\n    // if (!data.some((app) => app.id === this.idParam))\n    //   return <Redirect to='/404' />;\n  }\n  render() {\n    return (\n      <div className='apartment'>\n        <Gallery_Slider apartment={this.apartment} />\n        <Gallery_Info apartment={this.apartment} />\n      </div>\n    );\n  }\n}\n\nexport default Apartment;\n","import heroHome from \"./Assets/header_logo.svg\";\nimport ReactDOM from \"react-dom\";\nimport React from \"react\";\nimport Header from \"./Components/Header\";\nimport Banner from \"./Components/Banner\";\nimport Home from \"./Pages/Home\";\nimport About from \"./Pages/About\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n//A <BrowserRouter> uses regular URL paths. These are generally the best-looking URLs\nimport \"./Styles/App.css\";\nimport Apartment from \"./Pages/Apartment\";\nimport Gallery from \"./Pages/Gallery\";\nimport Thumbnail from \"./Components/Thumbnail\";\n\nfunction App() {\n  return (\n    <div className='container'>\n      <Router>\n        <Header />\n        {/* Switch as soon as it goes to one route and it matches the url it gonna stop and only render that compoment*/}\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/about' component={About} />\n          <Route exact path='/apartment/:id' component={Apartment} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n{\n  /* <Router>\n  <Header />\n  <Home />\n</Router>; */\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./Styles/index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}